<snippet>
	<content><![CDATA[
<!-- 配置文件上载解析器 -->
<bean id="multipartResolver"
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!-- 设置上载编码, 否则中文文件名会乱码 -->
	<property name="defaultEncoding" 
		value="utf-8"/>
   <!-- one of the properties available; the maximum file size in bytes -->
   <!-- 最大上载总字节数 -->
   <property name="maxUploadSize" 
    	value="10000000"/>
</bean>

@RequestMapping("api/upload.do")
public void upload(MultipartFile file, ResponseResult rr,
		HttpServletRequest req, HttpServletResponse resp) {
	try {
		//上载文件存储 
		String realPath = req.getServletContext().getRealPath("/");
		System.out.println("realPath is " + realPath);
		file.transferTo(new File(realPath, "/img/" + file.getOriginalFilename()));
		String jsonStr = 
				"{\"code\":\"200\",\"message\":\"Upload success!\",\"result\":\""+
						"img/" + file.getOriginalFilename()+"\"}";			
		resp.getWriter().write(jsonStr);
	} catch (IOException e) {
		e.printStackTrace();
	}
}

@RequestMapping("img.do")
@ResponseBody
public byte[] image(HttpServletRequest req, String imgUrl) {
	File file = new File(imgUrl);
	byte[] imgBytes = new byte[(int) file.length()];
	InputStream is;
	try {
		is = new FileInputStream(file);
		is.read(imgBytes);
	} catch (FileNotFoundException e1) {
		e1.printStackTrace();
	} catch (IOException e) {
		e.printStackTrace();
	}		
	return imgBytes; 
}

//js上传
uploadInput.addEventListener('change', function() {
	console.log(uploadInput.files) // File listing!
});
for (var i = 0, fileCount = uploadInput.files.length; i < fileCount; i++) {
	 console.log(uploadInput.files[i]);
}
var maxAllowedSize = 1000000;
var file = uploadInput.files[0];

	if(uploadInput.files[0].size > maxAllowedSize) {
		alert("超过文件上传大小限制");
	}else{
    var form = new FormData();
    form.append('file', file, file.name);
    form.enctype = "multipart/form-data";

    var xhr = new XMLHttpRequest();
    xhr.open("post", "/api/upload", true);
    xhr.onload = function () {
    	  if (xhr.status === 200) {
    	    alert("文件上传成功");
    	    var o = JSON.parse(xhr.responseText);
    	    imageUrl = o && o.result;
    	    image.value = imageUrl;
    	    imgpre.src = imageUrl;
    	  } else {
    	    alert('An error occurred!');
    	  }
    	};
    xhr.send(form);
}

//js上传
var formData = new FormData();
var file = document.getElementById("iconPic").file[0];
formData.append("file", file);
$.ajax({
	url:"api/upload.do",
	data:formData,
	type:"post",
	dataType:"json",
	//不处理数据
	contentType:false,
	processData:false,
	success:function(obj){
		alert(obj.message);
		var url = window.URL.createObjectURL(file)
		icon.src = url;
	}
})

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>MultiPartFile</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
