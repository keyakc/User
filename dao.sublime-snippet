<snippet>
	<content><![CDATA[
/*
	 * 依据用户名查询对应的用户信息，如果找不到，
	 * 返回null。
	 */
	public User find(String username){
		User user = null;
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {
			conn = DBUtils.getConn();
			String sql = "SELECT * FROM "
				+ "t_user WHERE username=?";
			ps = conn.prepareStatement(sql);
			ps.setString(1, username);
			rs = ps.executeQuery();
			if(rs.next()){
				user = new User();
				user.setUsername(username);
				user.setPhone(
						rs.getString("phone"));
				user.setPwd(rs.getString(
						"password"));
				user.setEmail(
						rs.getString("email"));
				user.setId(rs.getInt("id"));
			}
		} catch (Exception e) {
			e.printStackTrace();
			throw new RuntimeException(e);
		}finally{
			DBUtils.close(conn, ps, rs);
		}
		return user;
	}
	
	/**
	 * 删除用户
	 */
	public void delete(int id){
		Connection conn = null;
		PreparedStatement ps = null;
		try {
			conn = DBUtils.getConn();
			String sql = "DELETE FROM t_user "
					+ "WHERE id=?";
			ps = conn.prepareStatement(sql);
			ps.setInt(1, id);
			ps.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
			throw new RuntimeException(e);
		}finally{
			DBUtils.close(conn, ps, null);
		}
	}
	
	
	/**
	 * 插入用户的信息
	 */
	public void save(User user){
		Connection conn = null;
		PreparedStatement ps = null;
		try {
			conn = DBUtils.getConn();
			String sql = "INSERT INTO t_user "
					+ "VALUES(null,?,?,?,?)";
			ps = conn.prepareStatement(sql);
			ps.setString(1, user.getUsername());
			ps.setString(2, user.getPwd());
			ps.setString(3, user.getEmail());
			ps.setString(4, user.getPhone());
			ps.executeUpdate();
			
		} catch (Exception e) {
			e.printStackTrace();
			throw new RuntimeException(e);
		}finally{
			DBUtils.close(conn, ps, null);
		}
		
	}
	
	/**
	 * 查询出所有用户的信息
	 */
	public List<User> findAll(){
		List<User> users = 
				new ArrayList<User>();
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {
			conn = DBUtils.getConn();
			String sql = "SELECT * FROM t_user";
			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			while(rs.next()){
				User user = new User();
				user.setId(rs.getInt("id"));
				user.setUsername(
						rs.getString("username"));
				user.setPhone(
						rs.getString("phone"));
				user.setEmail(
						rs.getString("email"));
				user.setPwd(
						rs.getString("password"));
				users.add(user);				
			}
		} catch (Exception e) {
			e.printStackTrace();
			throw new RuntimeException(e);
		}finally{
			DBUtils.close(conn, ps, rs);
		}
		return users;
	}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>DAO</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
